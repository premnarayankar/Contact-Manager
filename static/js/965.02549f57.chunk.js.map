{"version":3,"file":"static/js/965.02549f57.chunk.js","mappings":"8KAGMA,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAoErB,UAlEoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQC,KAAzB,IAE7B,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KA0BA,OAxBAC,EAAAA,EAAAA,UAAQ,WACFV,EAASW,OAAS,GACpBJ,GACE,OAAIP,GAAUY,MAAK,SAACC,EAAGC,GAAJ,OACjBD,EAAEE,KAAKC,cAAgBF,EAAEC,KAAKC,cAAgB,GAAK,CADlC,IAKxB,GAAE,CAAChB,KAEJU,EAAAA,EAAAA,UAAQ,WACN,IAAMO,GAAS,OAAIjB,GAAUkB,QAC3B,SAACC,GAAD,OACEA,EAASJ,KAAKC,cAAcI,SAASZ,EAAOQ,gBAC5CG,EAASE,MAAML,cAAcI,SAASZ,EAAOQ,gBAC7CG,EAAShB,QAAQmB,WAAWN,cAAcI,SAASZ,EAAOQ,cAH5D,IAKFT,EACEU,EAAOL,MAAK,SAACC,EAAGC,GAAJ,OACVD,EAAEE,KAAKC,cAAgBF,EAAEC,KAAKC,cAAgB,GAAK,CADzC,IAIf,GAAE,CAACR,KAGF,iBAAKe,UAAU,YAAf,WACE,iBACEA,UAAU,yCACVC,MAAO,CAAEC,WAAY,cAFvB,WAIE,eAAIF,UAAU,yBAAd,2BACA,kBACEG,KAAK,OACLH,UAAU,eACVI,YAAY,6BACZ,aAAW,WACXC,SAAU,SAACC,GAAD,OAAOpB,EAAUoB,EAAEC,OAAO1B,MAA1B,QAId,gBAAKmB,UAAU,WAAf,SACGvB,EAASW,OAAS,GACjBL,EAAeyB,KAAI,SAAC5B,EAAS6B,GAAV,OACjB,SAAC,EAAAC,SAAD,CAEEC,UACE,gBACEX,UAAU,2BACVC,MAAO,CAAEW,OAAQ,OAAQC,gBAAiB,aALhD,UASE,SAACtC,EAAD,CAA0BuC,KAAMlC,GAAlBA,EAAQmC,KARjBN,EAFU,QAgB5B,C,mECjEc,SAASO,EAAeC,EAAKR,GAC1C,OCLa,SAAyBQ,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BA,EAAKR,GACjD,IAAIW,EAAY,MAAPH,EAAc,KAAyB,qBAAXI,QAA0BJ,EAAII,OAAOC,WAAaL,EAAI,cAE3F,GAAU,MAANG,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKX,KAAQS,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAG1C,QAET4B,GAAKgB,EAAKrC,SAAWqB,GAH4BiB,GAAK,GAc9D,CATE,MAAOM,GACPL,GAAK,EACLH,EAAKQ,CACP,CAAE,QACA,IACON,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,QAG9C,CAFE,QACA,GAAIO,EAAI,MAAMH,CAChB,CACF,CAEA,OAAOC,CAxBe,CAyBxB,CFvBgC,CAAqBR,EAAKR,KAAM,EAAAwB,EAAA,GAA2BhB,EAAKR,IGLjF,WACb,MAAM,IAAIyB,UAAU,4IACtB,CHGsG,EACtG,C","sources":["components/ContactList.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { lazy, Suspense } from \"react\";\r\nconst Contact = lazy(() => import(\"./Contact\"));\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector((state) => state.contact.value);\r\n\r\n  const [sortedContacts, setSortedContacts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useMemo(() => {\r\n    if (contacts.length > 0) {\r\n      setSortedContacts(\r\n        [...contacts].sort((a, b) =>\r\n          a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\r\n        )\r\n      );\r\n    }\r\n  }, [contacts]);\r\n\r\n  useMemo(() => {\r\n    const sorted = [...contacts].filter(\r\n      (searched) =>\r\n        searched.name.toLowerCase().includes(search.toLowerCase()) ||\r\n        searched.email.toLowerCase().includes(search.toLowerCase()) ||\r\n        searched.contact.toString().toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setSortedContacts(\r\n      sorted.sort((a, b) =>\r\n        a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\r\n      )\r\n    );\r\n  }, [search]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"pt-2 mb-4 border position-sticky top-0\"\r\n        style={{ background: \"lightgreen\" }}\r\n      >\r\n        <h1 className=\"display-5 text-center \">Contact list</h1>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search contacts and People\"\r\n          aria-label=\"contacts\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"row mx-2\">\r\n        {contacts.length > 0 &&\r\n          sortedContacts.map((contact, i) => (\r\n            <Suspense\r\n              key={i}\r\n              fallback={\r\n                <div\r\n                  className=\"contact-card col-12 mb-3\"\r\n                  style={{ height: \"70px\", backgroundColor: \"#eeeded\" }}\r\n                ></div>\r\n              }\r\n            >\r\n              <Contact key={contact.id} user={contact} />\r\n            </Suspense>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Contact","lazy","contacts","useSelector","state","contact","value","useState","sortedContacts","setSortedContacts","search","setSearch","useMemo","length","sort","a","b","name","toLowerCase","sorted","filter","searched","includes","email","toString","className","style","background","type","placeholder","onChange","e","target","map","i","Suspense","fallback","height","backgroundColor","user","id","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}